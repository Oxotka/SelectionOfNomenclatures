
&ИзменениеИКонтроль("ПриСозданииФормыПодбораНаСервере")
Процедура ПодборТоваров_ПриСозданииФормыПодбораНаСервере(Форма)
	
	Параметры = Форма.Параметры;
	Элементы = Форма.Элементы;
	ЭтоФормаПодбораВДокументыПродажи = ПодборТоваровКлиентСервер.ЭтоФормаПодбораВДокументыПродажи(Форма);
	ЭтоФормаПодбораВДокументыЗакупки = ПодборТоваровКлиентСервер.ЭтоФормаПодбораВДокументыЗакупки(Форма);
	АвторизованВнешнийПользователь = ОбщегоНазначенияУТКлиентСервер.АвторизованВнешнийПользователь();
	
#Область ПолучитьЗначенияФункциональныхОпций
	
	Форма.ИспользоватьУпаковкиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьУпаковкиНоменклатуры");
	Форма.ИспользоватьХарактеристикиНоменклатуры = ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры");
	Форма.ИспользоватьСтандартныйПоискПриПодбореТоваров = Константы.ИспользоватьСтандартныйПоискПриПодбореТоваров.Получить();
		
	Если ЭтоФормаПодбораВДокументыПродажи Тогда
		Если Параметры.Свойство("ИспользуетсяЦенообразование25") Тогда
			Форма.ИспользуетсяЦенообразование25 = Параметры.ИспользуетсяЦенообразование25;
		Иначе			
			Форма.ИспользуетсяЦенообразование25 = ЦенообразованиеВызовСервера.ИспользуетсяЦенообразование25(Параметры.Дата);
		КонецЕсли;
		Форма.ИспользоватьРучныеСкидкиВПродажах = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВПродажах")
		                                          И НЕ АвторизованВнешнийПользователь;
		Форма.ИспользоватьНоменклатуруПродаваемуюСовместно = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПродаваемуюСовместно");
		Если Не Форма.РежимПодбораБезСоглашенийСКлиентами	Тогда	
			Форма.ИспользоватьСоглашенияСКлиентами = ПолучитьФункциональнуюОпцию("ИспользоватьСоглашенияСКлиентами");
		КонецЕсли;
		Форма.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения = ПолучитьФункциональнуюОпцию("ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения");
	ИначеЕсли ЭтоФормаПодбораВДокументыЗакупки Тогда
		Форма.ИспользоватьРучныеСкидкиВЗакупках = ПолучитьФункциональнуюОпцию("ИспользоватьРучныеСкидкиВЗакупках");
		Форма.ИспользоватьНоменклатуруПартнеров = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПартнеров");
	КонецЕсли;
#КонецОбласти

	#Вставка 
	Форма.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения = Ложь;
	#КонецВставки
	
#Область УстановитьСвойстваФормыПоПараметрам
	
	#Область УстановитьСкладскиеНастройкиПоПараметрам
	
	ЭтоГруппаСкладов = Справочники.Склады.ЭтоГруппа(Параметры.Склад);
	
	Если ЗначениеЗаполнено(Параметры.Склад)
		И ЭтоГруппаСкладов Тогда
		
		ЗапросПоСкладам = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	Склады.Ссылка В ИЕРАРХИИ(&Склад)
		|	И Склады.ВыборГруппы В(&ВыборГруппыСкладов)
		|	И НЕ Склады.ЭтоГруппа");
		
		ВыборГруппыСкладов = Новый Массив();
		ВыборГруппыСкладов.Добавить(Перечисления.ВыборГруппыСкладов.РазрешитьВЗаказахИНакладных);
		
		Если Не Параметры.РежимПодбораИсключитьГруппыДоступныеВЗаказах Тогда
			
			ВыборГруппыСкладов.Добавить(Перечисления.ВыборГруппыСкладов.РазрешитьВЗаказах);
			
		КонецЕсли;
		
		
		ЗапросПоСкладам.УстановитьПараметр("Склад", Параметры.Склад);
		ЗапросПоСкладам.УстановитьПараметр("ВыборГруппыСкладов", ВыборГруппыСкладов);
		
		Форма.Склады.ЗагрузитьЗначения(ЗапросПоСкладам.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад"));
		
	Иначе
		
		Если ЗначениеЗаполнено(Параметры.Склад) Тогда
			Форма.Склады.Добавить(Параметры.Склад);
		КонецЕсли;
		
	КонецЕсли;
	
	// Если склад не выбран, то заполнить список складов всеми разрешенными складами.
	Если Форма.Склады.Количество() = 0
		И Параметры.Свойство("ОстаткиПоВсемСкладам")
		И Параметры.ОстаткиПоВсемСкладам Тогда
		
		Форма.ОстаткиПоВсемСкладам = Истина;
		
		ЗапросПоСкладам = Новый Запрос(
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Склады.Ссылка КАК Склад
		|ИЗ
		|	Справочник.Склады КАК Склады
		|ГДЕ
		|	(Не Склады.ЭтоГруппа)");
		
		Форма.Склады.ЗагрузитьЗначения(ЗапросПоСкладам.Выполнить().Выгрузить().ВыгрузитьКолонку("Склад"));
		
	КонецЕсли;
	
	Если Форма.Склады.Количество() = 0 Тогда
		СкладПараметр = Справочники.Склады.ПустаяСсылка();
	ИначеЕсли Форма.Склады.Количество() = 1 Тогда
		СкладПараметр = Форма.Склады[0].Значение;
	Иначе
		СкладПараметр = Форма.Склады.ВыгрузитьЗначения();
	КонецЕсли;
	
	КоличествоСкладов = Форма.Склады.Количество();
	НесколькоСкладов = (КоличествоСкладов > 1);
	
	// Заполнить список выбора доступных складов в корзине.
	Элементы.КорзинаСклад.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрВыбора(Элементы.КорзинаСклад, "Ссылка", Форма.Склады.ВыгрузитьЗначения());
	Элементы.КорзинаСклад.Видимость = (НесколькоСкладов И Параметры.РежимПодбораИспользоватьСкладыВТабличнойЧасти);
	
	Если КоличествоСкладов = 0 Тогда
		
		Форма.ТолькоВНаличии = Ложь;
		Форма.ОтображатьОстатки = Ложь;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Параметры.Склад) Тогда 
		
		Форма.ТолькоВНаличии = Ложь;
		
	КонецЕсли;
	
	Форма.ОтображатьОстаткиНадпись = ?(Форма.ОтображатьОстатки, 
	НСтр("ru = 'Подробная информация об остатках (скрыть)'"),
	НСтр("ru = 'Подробная информация об остатках (показать)'"));
	
	Элементы.КорзинаСклад.ПараметрыВыбора = Новый ФиксированныйМассив(Новый Массив);
	ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрВыбора(Элементы.КорзинаСклад, "Ссылка", СкладПараметр);
	
	#КонецОбласти
	
	#Область УстановитьСвойстваФормыПодбораПоНалогообложениюНДС
		Если Параметры.Свойство("НалогообложениеНДС")
			И ЗначениеЗаполнено(Параметры.НалогообложениеНДС) Тогда
			Ограничения = УчетНДСУП.ОграничениеТоваровПоНалогообложению(Параметры.НалогообложениеНДС);
			Для Каждого Ограничение Из Ограничения Цикл
				ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Форма.СписокНоменклатура,
																						"Номенклатура." + Ограничение.Реквизит,
																						Ограничение.Значение,
																						Ограничение.ВидСравнения,
																						"ОтборПоУмолчанию",
																						Истина);
				Если Ограничение.Реквизит = "ПодакцизныйТовар" Тогда
					Элементы.ДекорацияПодакцизныйТовар.Видимость = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	#КонецОбласти
	
	Если ЭтоФормаПодбораВДокументыЗакупки Тогда
		
		#Область УстановитьСвойстваФормыПодбораВДокументыЗакупкиПоПараметрам
		
		ЗаполнитьЗначенияСвойств(Форма, Параметры,
		"Валюта, Дата, Соглашение, Партнер,
		|РежимПодбораИспользоватьСкладыВТабличнойЧасти,
		|ПроверятьЗаполнение");
		Форма.ПоставщикПартнер = Параметры.Партнер;
		
		Если ОбщегоНазначенияУТКлиентСервер.ЕстьРеквизитОбъекта(Параметры, "ЦенаВключаетНДС") Тогда
			Форма.Объект.ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
		КонецЕсли;
		
		Форма.ЕстьЦеныНоменклатурыПоставщиковВБудущем = ЕстьЗначенияЦенНоменклатурыПозжеДатыПодбора(Форма.Дата);
		
		Форма.Объект.Склад = Параметры.Склад;
		Форма.Объект.Соглашение = Параметры.Соглашение;
		Форма.Объект.Партнер = Параметры.Партнер;
		
		// Установить свойства элементов формы по переданным параметрам.
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.ИерархияНоменклатурыПартнера, "Владелец", Форма.ПоставщикПартнер);
		
		// Заполнить значения реквизитов формы и объекта по переданным параметрам.
		Элементы.КорзинаСклад.Видимость = Форма.РежимПодбораИспользоватьСкладыВТабличнойЧасти И (Форма.Склады.Количество() > 1);
		
		Если Не (Параметры.РежимПодбораБезКоличественныхПараметров = Неопределено) Тогда
			Форма.РежимПодбораБезКоличественныхПараметров = Параметры.РежимПодбораБезКоличественныхПараметров;
		КонецЕсли;
		
		Если Не (Параметры.РежимПодбораБезСуммовыхПараметров = Неопределено) Тогда
			Форма.РежимПодбораБезСуммовыхПараметров = Параметры.РежимПодбораБезСуммовыхПараметров;
		КонецЕсли;
		
		Если Не (Параметры.СкрыватьРучныеСкидки = Неопределено) Тогда
			Форма.СкрыватьРучныеСкидки = Параметры.СкрыватьРучныеСкидки;
		КонецЕсли;
		
		Если Не Форма.РежимПодбораБезСуммовыхПараметров И Не ЗначениеЗаполнено(Форма.Валюта)  Тогда
			ВызватьИсключение НСтр("ru = 'Параметр ""Валюта"" не заполнен.'");
		КонецЕсли;
		
		// Установить свойства элементов формы по переданным параметрам.
		Элементы.КорзинаЦена.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Цена (%1)'"), Форма.Валюта);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.СписокНоменклатураПартнера, "Владелец", Параметры.Партнер, 
		ВидСравненияКомпоновкиДанных.Равно, "ОтборПоУмолчанию", ЗначениеЗаполнено(Параметры.Партнер));
		
		Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
			Форма.АвтоЗаголовок = Ложь;
			Форма.Заголовок = Параметры.Заголовок;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ЗаголовокКнопкиПеренести) Тогда
			Форма.Команды.ПеренестиВДокумент.Заголовок = Параметры.ЗаголовокКнопкиПеренести;
			Форма.Команды.ПеренестиВДокумент.Подсказка = Параметры.ЗаголовокКнопкиПеренести;
			Форма.Элементы.КоманднаяПанельПеренести.Ширина = 24;
		КонецЕсли;
		
		Если Параметры.РежимПодбораБезКоличественныхПараметров Тогда
			Элементы.КорзинаКоличественныеПараметры.Видимость = Ложь;
		КонецЕсли;
		
		ОтображатьОстаткиНаСкладах = Не Параметры.СкрыватьКомандуОстаткиНаСкладах И Не (Форма.Склады.Количество() = 0);
		Форма.СкрыватьКомандуОстаткиНаСкладах = Параметры.СкрыватьКомандуОстаткиНаСкладах;
		Форма.ОтображатьОстаткиНаСкладах = ОтображатьОстаткиНаСкладах;
		
		Элементы.ОтображатьОстаткиНадпись.Видимость = ОтображатьОстаткиНаСкладах;
		Элементы.ОтображатьОстаткиНоменклатурыПартнераНадпись.Видимость = ОтображатьОстаткиНаСкладах;
		
		Если ПервоеОткрытиеФормы(Форма.КодФормы) Тогда
			УстановитьПараметрыДереваОтбораКачествоНовый(Форма);
			Форма.ОтображатьОстатки = Истина;
		КонецЕсли;
		
		Элементы.ОстаткиТоваров.Видимость = Форма.ОтображатьОстатки И ОтображатьОстаткиНаСкладах И Не Форма.РежимПодбораБезКоличественныхПараметров;
		Элементы.ОстаткиТоваровПоставщика.Видимость = Форма.ОтображатьОстатки И ОтображатьОстаткиНаСкладах И Не Форма.СкрыватьКомандуОстаткиНаСкладах;
		
		// Установить видимость элементов отображения остатков.
		
		Элементы.ТолькоВНаличии.Видимость = ОтображатьОстаткиНаСкладах;
		
		Элементы.СписокСтандартныйПоискНоменклатураВНаличииОстаток.Видимость = Не Параметры.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискНоменклатураВНаличииОстаток.Видимость = Не Параметры.СкрыватьКомандуОстаткиНаСкладах;
		
		Элементы.СписокСтандартныйПоискНоменклатураДоступно.Видимость = ОтображатьОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискНоменклатураДоступно.Видимость = ОтображатьОстаткиНаСкладах;
		Элементы.СписокСтандартныйПоискХарактеристикиВНаличииОстаток.Видимость = Не Параметры.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокСтандартныйПоискХарактеристикиДоступно.Видимость = ОтображатьОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискХарактеристикиВНаличииОстаток.Видимость = Не Параметры.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискХарактеристикиДоступно.Видимость = ОтображатьОстаткиНаСкладах;
		
		// Установить видимость элементов отображения цен.
		ВидимостьЭлементовОтображенияЦен = Не Параметры.СкрыватьКомандуЦеныНоменклатуры;
		
		Элементы.СписокСтандартныйПоискНоменклатураКонтекстноеМенюПерейтиКЦенамНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		Элементы.СписокСтандартныйПоискХарактеристикиКонтекстноеМенюЦеныНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		Элементы.СписокРасширенныйПоискНоменклатураКонтекстноеМенюПерейтиКЦенамНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		Элементы.СписокРасширенныйПоискХарактеристикиКонтекстноеМенюЦеныНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		Элементы.СписокСтандартныйПоискНоменклатураПартнераКонтекстноеМенюПерейтиКЦенамНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		Элементы.СписокРасширенныйПоискНоменклатураПартнераКонтекстноеМенюПерейтиКЦенамНоменклатуры.Видимость = ВидимостьЭлементовОтображенияЦен;
		
		Если Параметры.РежимПодбораБезСуммовыхПараметров Тогда
			Элементы.КорзинаСуммаРучнойСкидки.Видимость                         = Ложь;
			Элементы.КорзинаПроцентРучнойСкидки.Видимость                       = Ложь;
			Элементы.КорзинаСумма.Видимость                                     = Ложь;
			Элементы.КорзинаЦена.Видимость                                      = Ложь;
			Элементы.СписокСтандартныйПоискНоменклатураЦена.Видимость           = Ложь;
			Элементы.СписокРасширенныйПоискНоменклатураЦена.Видимость           = Ложь;
			Элементы.СписокРасширенныйПоискХарактеристикиЦена.Видимость         = Ложь;
			Элементы.СписокСтандартныйПоискХарактеристикиЦена.Видимость         = Ложь;
			Элементы.СписокСтандартныйПоискНоменклатураПартнераЦена.Видимость = Ложь;
			Элементы.СписокРасширенныйПоискНоменклатураПартнераЦена.Видимость = Ложь;
			Элементы.ГруппаФильтрПоЦене.Видимость                               = Ложь;
			Элементы.ВидЦеныПоставщикаНоменклатура.Видимость                    = Ложь;
			Элементы.ВидЦеныПоставщика.Видимость                                = Ложь;
			Элементы.КорзинаВидЦеныПоставщика.Видимость                         = Ложь;
		КонецЕсли;
		
		Если Параметры.СкрыватьРучныеСкидки Тогда
			Элементы.КорзинаСуммаРучнойСкидки.Видимость = Ложь;
			Элементы.КорзинаПроцентРучнойСкидки.Видимость = Ложь;
		КонецЕсли;
		
		Если Не (Параметры.ЗапрашиватьКоличество = Неопределено) Тогда
			Форма.ЗапрашиватьКоличество = Параметры.ЗапрашиватьКоличество;
		КонецЕсли;
		
		Элементы.ЗапрашиватьКоличествоЦену.Видимость = Не Параметры.СкрыватьКнопкуЗапрашиватьКоличество;
		Элементы.ЗапрашиватьКоличествоЦену.Пометка = Форма.ЗапрашиватьКоличество;
		
		Если Не Форма.ИспользоватьНоменклатуруПартнеров Или Не ЗначениеЗаполнено(Параметры.Партнер) Тогда
			Элементы.СтраницаНоменклатураПартнера.Видимость = Ложь;
			Элементы.Страницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
			Элементы.НоменклатураПартнера.Видимость = Ложь;
		КонецЕсли;
		
		Форма.ВидНоменклатурыДоИзменения = Форма.ВидНоменклатуры;
		
		Элементы.СтраницаСоздатьНоменклатуру.Видимость = ПравоДоступа("Добавление", Метаданные.Справочники.Номенклатура);
		Элементы.СтраницаСоздатьХарактеристику.Видимость = ПравоДоступа("Добавление", Метаданные.Справочники.ХарактеристикиНоменклатуры);
		
		#КонецОбласти
		
	ИначеЕсли ЭтоФормаПодбораВДокументыПродажи Тогда
		
		#Область УстановитьСвойстваФормыПодбораВДокументыПродажиПоПараметрам
		
		ПервоеОткрытиеФормы = ПервоеОткрытиеФормы(Форма.КодФормы);
		Если ПервоеОткрытиеФормы Тогда
			УстановитьПараметрыДереваОтбораКачествоНовый(Форма);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Соглашение) Тогда
			СегментНоменклатуры = ОбщегоНазначенияУТВызовСервера.ЗначениеРеквизитаОбъекта(Параметры.Соглашение, "СегментНоменклатуры");
			Форма.СегментНоменклатуры = СегментНоменклатуры;
		Иначе 
			Форма.СегментНоменклатуры = Справочники.СегментыНоменклатуры.ПустаяСсылка();
		КонецЕсли;
		
		Элементы.СегментНоменклатуры.Доступность = ПравоДоступа("Просмотр", Метаданные.Справочники.СегментыНоменклатуры); 
		
		Элементы.КорзинаНоменклатура.ТолькоПросмотр = Параметры.СкрыватьВыборНоменклатуры;
		
		Форма.Валюта = Параметры.Валюта;
		Форма.Дата = Параметры.Дата;
		Форма.Объект.Склад = Параметры.Склад;
		Форма.Партнер = Параметры.Партнер;
		Форма.Соглашение = Параметры.Соглашение;
		Форма.Объект.Соглашение = Параметры.Соглашение;
		Форма.Объект.НалогообложениеНДС = Параметры.НалогообложениеНДС;
		Форма.Объект.ЦенаВключаетНДС = Параметры.ЦенаВключаетНДС;
		Форма.РежимПодбораИспользоватьСкладыВТабличнойЧасти = Параметры.РежимПодбораИспользоватьСкладыВТабличнойЧасти;
		Форма.ВозвращатьМногооборотнуюТару = Параметры.ВозвращатьМногооборотнуюТару;
		
		Форма.ВидЦены = Параметры.ВидЦены;
		
		Форма.РежимПодбораБезКоличественныхПараметров = Параметры.РежимПодбораБезКоличественныхПараметров;
		
		Форма.РежимПодбораБезСуммовыхПараметров = Параметры.РежимПодбораБезСуммовыхПараметров;
		
		Форма.РежимПодбораБезСоглашенийСКлиентами = Параметры.РежимПодбораБезСоглашенийСКлиентами;
		
		Форма.СкрыватьРучныеСкидки = Параметры.СкрыватьРучныеСкидки;
		
		Форма.ИспользоватьДатыОтгрузки = Параметры.ИспользоватьДатыОтгрузки;
		
		Форма.НеРазбиватьНаборыПоКомплектующим = Параметры.НеРазбиватьНаборыПоКомплектующим;
		
		Форма.ВариантАнализаНоменклатурыПродаваемойСовместно = Параметры.ВариантАнализаНоменклатурыПродаваемойСовместно;
		
		ВидыЦенОбъектаХраненияУсловийПродаж = Неопределено;
		
		Если Форма.РежимПодбораБезСуммовыхПараметров Тогда
			ВидыЦен = Новый Массив();	
		ИначеЕсли Форма.РежимОтбораПоАссортименту Тогда
			Форма.ОбъектПланированияАссортимента = АссортиментСервер.ОбъектПланирования(СкладПараметр, Форма.Дата);
			
			ОтборВидовЦен = Новый Структура;
			ОтборВидовЦен.Вставить("РазрешеныПродажи", Истина);
			
			ВидыЦен = АссортиментСервер.ВидыЦенПоАссортименту(Форма.ОбъектПланированияАссортимента, Форма.Дата, ОтборВидовЦен);
			Форма.ЕстьЦеныВБудущем = ЕстьЗначенияЦенПозжеДатыПодбора(Форма.Дата, ВидыЦен);
		ИначеЕсли Форма.РежимОтбораДляРозничныхПродаж Тогда
			Если Форма.ИспользуетсяЦенообразование25 Тогда
				Форма.ОбъектХраненияУсловийПродаж = АссортиментСерверПовтИсп.ФорматМагазинаПоСкладу(СкладПараметр, Форма.Дата);
				
				ВидыЦенОбъектаХраненияУсловийПродаж = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ОбъектХраненияУсловийПродаж, "РозничныйВидЦены, ИндивидуальныйВидЦены");
				ВидыЦен = Новый Массив();
				Для Каждого Элемент Из ВидыЦенОбъектаХраненияУсловийПродаж Цикл
					Если ЗначениеЗаполнено(Элемент.Значение) Тогда
						ВидыЦен.Добавить(Элемент.Значение);
					КонецЕсли;
				КонецЦикла;
				
				Форма.ЕстьЦеныВБудущем = ЕстьЗначенияЦенПозжеДатыПодбора(Форма.Дата, ВидыЦен);
			КонецЕсли;
		ИначеЕсли Форма.РежимПодбораБезСоглашенийСКлиентами Тогда
			ВидыЦен = Новый Массив();
			ВидыЦен.Добавить(Форма.ВидЦены);
			Форма.ЕстьЦеныВБудущем = ЕстьЗначенияЦенПозжеДатыПодбора(Форма.Дата, ВидыЦен);
		ИначеЕсли Не Форма.ИспользоватьСоглашенияСКлиентами Тогда
			Форма.ОбъектХраненияУсловийПродаж = Форма.Партнер;
			Если Форма.ИспользуетсяЦенообразование25 Тогда
				ВидыЦенОбъектаХраненияУсловийПродаж = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ОбъектХраненияУсловийПродаж, "ВидЦен, ИндивидуальныйВидЦены");
				ВидыЦен = Новый Массив();
				Для Каждого Элемент Из ВидыЦенОбъектаХраненияУсловийПродаж Цикл
					Если ЗначениеЗаполнено(Элемент.Значение) Тогда
						ВидыЦен.Добавить(Элемент.Значение);
					КонецЕсли;
				КонецЦикла;
			Иначе
				ВидыЦен = ВидыЦенПоУмолчанию(Форма.Объект.ЦенаВключаетНДС);
			КонецЕсли;
			Форма.ЕстьЦеныВБудущем = ЕстьЗначенияЦенПозжеДатыПодбора(Форма.Дата, ВидыЦен);
		Иначе
			Форма.ОбъектХраненияУсловийПродаж = Форма.Соглашение;
			Если Форма.ИспользуетсяЦенообразование25 Тогда
				ВидыЦенОбъектаХраненияУсловийПродаж = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Форма.ОбъектХраненияУсловийПродаж, "ВидЦен, ИндивидуальныйВидЦены");
				ВидыЦен = Новый Массив();
				Для Каждого Элемент Из ВидыЦенОбъектаХраненияУсловийПродаж Цикл
					Если ЗначениеЗаполнено(Элемент.Значение) Тогда
						ВидыЦен.Добавить(Элемент.Значение);
					КонецЕсли;
				КонецЦикла;
			Иначе	
				ВидыЦен = ВидыЦенПоСоглашениюСКлиентом(Форма.Соглашение);
			КонецЕсли;
			Форма.ЕстьЦеныВБудущем = ЕстьЗначенияЦенПозжеДатыПодбора(Форма.Дата, ВидыЦен);
		КонецЕсли;
		
		Форма.ВидыЦен.ЗагрузитьЗначения(ВидыЦен);
		
		Если НЕ ВидыЦенОбъектаХраненияУсловийПродаж = Неопределено Тогда
			Если ВидыЦенОбъектаХраненияУсловийПродаж.Свойство("ВидЦен") Тогда
				Форма.ВидЦенОсновной = ВидыЦенОбъектаХраненияУсловийПродаж.ВидЦен;
			ИначеЕсли ВидыЦенОбъектаХраненияУсловийПродаж.Свойство("РозничныйВидЦены") Тогда 
				Форма.ВидЦенОсновной = ВидыЦенОбъектаХраненияУсловийПродаж.РозничныйВидЦены;
			Иначе
				Форма.ВидЦенОсновной = Справочники.ВидыЦен.ПустаяСсылка();
			КонецЕсли;
			
			Если ВидыЦенОбъектаХраненияУсловийПродаж.Свойство("ИндивидуальныйВидЦены") Тогда
				Форма.ВидЦенИндивидуальный = ВидыЦенОбъектаХраненияУсловийПродаж.ИндивидуальныйВидЦены;
			Иначе
				Форма.ВидЦенИндивидуальный = Справочники.ВидыЦен.ПустаяСсылка();
			КонецЕсли;
		Иначе
			Форма.НеИспользоватьВидыЦенПоУсловиюПродаж = Истина;
		КонецЕсли;
		
		Если Форма.ИспользуетсяЦенообразование25 Тогда
			Если Форма.РежимПодбораБезСуммовыхПараметров Тогда
				Форма.ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.БезЦен;
			ИначеЕсли (Не Форма.ИспользоватьСоглашенияСКлиентами ИЛИ Форма.РежимПодбораБезСоглашенийСКлиентами) 
				И Не Форма.РежимОтбораДляРозничныхПродаж Тогда
				Форма.ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапке;
			Иначе
				Форма.ВариантРасчетаЦен = ВариантРасчетаЦен(Форма);
			КонецЕсли;
		Иначе
			Если Форма.РежимПодбораБезСуммовыхПараметров Тогда
				Форма.ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.БезЦен;
			ИначеЕсли НЕ Форма.ИспользоватьСоглашенияСКлиентами
				Или Форма.РежимПодбораБезСоглашенийСКлиентами Тогда	
				Форма.ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.ВидЦенВШапке;
			Иначе
				Форма.ВариантРасчетаЦен = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Форма.Соглашение, "ВариантРасчетаЦен");
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Форма.ВариантРасчетаЦен) Тогда
			Форма.ВариантРасчетаЦен = Перечисления.ВариантыРасчетаЦенПоСоглашениямСКлиентами.БезЦен;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Форма.ВариантАнализаНоменклатурыПродаваемойСовместно) Тогда
			Форма.ВариантАнализаНоменклатурыПродаваемойСовместно = Перечисления.ВариантыАнализаНоменклатурыПродаваемойСовместно.ОптоваяТорговля;
		КонецЕсли;
		
		Элементы.КорзинаДатаОтгрузки.Видимость = Форма.ИспользоватьДатыОтгрузки;
		
		Если Не Форма.РежимПодбораБезСуммовыхПараметров Тогда
			Если Не ЗначениеЗаполнено(Форма.Валюта) Тогда
				ВызватьИсключение НСтр("ru = 'Параметр ""Валюта"" не заполнен.'");
			КонецЕсли;
		КонецЕсли;
		
		Если Параметры.РежимПодбораБезКоличественныхПараметров Тогда
			Элементы.КорзинаКоличественныеПараметры.Видимость = Ложь;
		КонецЕсли;
		
		УстановкаЦенНоменклатуры = Ложь;
		Если Параметры.Свойство("Документ") Тогда
			Если ТипЗнч(Параметры.Документ) = Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
				УстановкаЦенНоменклатуры = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ТолкающееНазначение = Неопределено;
		Если ЗначениеЗаполнено(Параметры.НаправлениеДеятельности) Тогда
			ТолкающееНазначение = НаправленияДеятельностиСервер.ТолкающееНазначение(Параметры.НаправлениеДеятельности);
		КонецЕсли;
		РежимПодбораОстатковПоНаправлениюДеятельности = ЗначениеЗаполнено(ТолкающееНазначение);
		Форма.Обособленно = РежимПодбораОстатковПоНаправлениюДеятельности;
		Форма.ОтборПоНазначению = ТолкающееНазначение;
		Форма.ОтборПоНазначениюТекущий = ТолкающееНазначение;
		Форма.РежимПодбораОстатковПоНаправлениюДеятельности = РежимПодбораОстатковПоНаправлениюДеятельности;
		Элементы.КорзинаОбособленно.Видимость = РежимПодбораОстатковПоНаправлениюДеятельности;
		Элементы.ОбособленноСтандартныйПоискНоменклатура.Видимость = РежимПодбораОстатковПоНаправлениюДеятельности;
		Элементы.ОбособленноРасширенныйПоискНоменклатура.Видимость = РежимПодбораОстатковПоНаправлениюДеятельности;
		Элементы.ОбособленноСтандартныйПоискХарактеристики.Видимость = РежимПодбораОстатковПоНаправлениюДеятельности;
		Элементы.ОбособленноРасширенныйПоискХарактеристики.Видимость = РежимПодбораОстатковПоНаправлениюДеятельности;
		
		ОтображатьОстаткиНаСкладах = Не Параметры.СкрыватьКомандуОстаткиНаСкладах И Не (Форма.Склады.Количество() = 0);
		Форма.СкрыватьКомандуОстаткиНаСкладах = Параметры.СкрыватьКомандуОстаткиНаСкладах;
		Форма.ОтображатьОстаткиНаСкладах = ОтображатьОстаткиНаСкладах;
		
		Если ПервоеОткрытиеФормы Тогда
			Форма.ОтображатьОстатки = Истина;
		КонецЕсли;
		
		Элементы.ОтображатьОстаткиНадпись.Видимость = ОтображатьОстаткиНаСкладах
			И Не ЗначениеЗаполнено(Параметры.НаправлениеДеятельности)
			И (Не Форма.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения
				Или АвторизованВнешнийПользователь);
		Элементы.ОстаткиТоваров.Видимость = Форма.ОтображатьОстатки
			И ОтображатьОстаткиНаСкладах
			И Не ЗначениеЗаполнено(Параметры.НаправлениеДеятельности)
			И (Не Форма.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения
				Или АвторизованВнешнийПользователь);;
		Элементы.СписокСтандартныйПоискНоменклатураВНаличииОстаток.Видимость = Не Форма.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискНоменклатураВНаличииОстаток.Видимость = Не Форма.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокСтандартныйПоискХарактеристикиВНаличииОстаток.Видимость = Не Форма.СкрыватьКомандуОстаткиНаСкладах;
		Элементы.СписокРасширенныйПоискХарактеристикиВНаличииОстаток.Видимость = Не Форма.СкрыватьКомандуОстаткиНаСкладах;
		УстановитьВидимостьДоступныхОстатковПодбораВДокументПродажи(Форма);
		
		Элементы.ТолькоВНаличии.Видимость = ОтображатьОстаткиНаСкладах;
		
		Если ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			Элементы.ТолькоВНаличии.Видимость = Ложь;
		КонецЕсли;
		
		Если Параметры.РежимПодбораБезСуммовыхПараметров Тогда
			Элементы.КорзинаСуммаРучнойСкидки.Видимость = Ложь;
			Элементы.КорзинаПроцентРучнойСкидки.Видимость = Ложь;
			Элементы.КорзинаСумма.Видимость = Ложь;
			Элементы.КорзинаЦена.Видимость = Ложь;
			Элементы.СписокСтандартныйПоискНоменклатураЦена.Видимость = Ложь;
			Элементы.СписокРасширенныйПоискНоменклатураЦена.Видимость = Ложь;
			Элементы.СписокРасширенныйПоискХарактеристикиЦена.Видимость = Ложь;
			Элементы.СписокСтандартныйПоискХарактеристикиЦена.Видимость = Ложь;
			Элементы.ГруппаФильтрПоЦене.Видимость = Ложь;
			
			Элементы.КорзинаКонтекстноеМенюЗаполнитьЦеныПоСоглашению.Видимость            = Ложь;
			Элементы.КорзинаКонтекстноеМенюЗаполнитьЦеныВыделенныхСтрокПоВидуЦен.Видимость = Ложь;
			Элементы.КорзинаКонтекстноеМенюНазначитьРучнуюСкидку.Видимость                = Ложь;
			Элементы.КорзинаКонтекстноеМенюНазначитьРучнуюСкидкуВыделенныхСтрок.Видимость = Ложь;
			Элементы.КорзинаКонтекстноеМенюОтменитьРучныеСкидки.Видимость                 = Ложь;
		КонецЕсли;
		
		Если Параметры.СкрыватьРучныеСкидки Тогда
			Элементы.КорзинаСуммаРучнойСкидки.Видимость = Ложь;
			Элементы.КорзинаПроцентРучнойСкидки.Видимость = Ложь;
			Элементы.КорзинаКонтекстноеМенюНазначитьРучнуюСкидку.Видимость                = Ложь;
			Элементы.КорзинаКонтекстноеМенюНазначитьРучнуюСкидкуВыделенныхСтрок.Видимость = Ложь;
			Элементы.КорзинаКонтекстноеМенюОтменитьРучныеСкидки.Видимость                 = Ложь;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.Заголовок) Тогда
			Форма.АвтоЗаголовок = Ложь;
			Форма.Заголовок = Параметры.Заголовок;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Параметры.ЗаголовокКнопкиПеренести) Тогда
			Форма.Команды.ПеренестиВДокумент.Заголовок = Параметры.ЗаголовокКнопкиПеренести;
			Форма.Команды.ПеренестиВДокумент.Подсказка = Параметры.ЗаголовокКнопкиПеренести;
		КонецЕсли;
		
		Если Параметры.ЗапрашиватьКоличество <> Неопределено Тогда
			Форма.ЗапрашиватьКоличество = Параметры.ЗапрашиватьКоличество;
		КонецЕсли;
		
		Элементы.НеЗапрашиватьКоличество.Видимость = Не Параметры.СкрыватьКнопкуЗапрашиватьКоличество И Не Форма.РежимПодбораБезСуммовыхПараметров;
		Элементы.ЗапрашиватьКоличествоЦену.Видимость = Не Параметры.СкрыватьКнопкуЗапрашиватьКоличество И Не Форма.РежимПодбораБезСуммовыхПараметров;
		Элементы.ЗапрашиватьКоличество.Видимость = Не Параметры.СкрыватьКнопкуЗапрашиватьКоличество;
		
		Элементы.СписокСтандартныйПоискНоменклатураКонтекстноеМенюЦеныНоменклатуры.Видимость = Не Параметры.СкрыватьКомандуЦеныНоменклатуры;
		Элементы.СписокРасширенныйПоискНоменклатураКонтекстноеМенюЦеныНоменклатуры.Видимость = Не Параметры.СкрыватьКомандуЦеныНоменклатуры;
		Элементы.СписокРасширенныйПоискХарактеристикиКонтекстноеМенюЦеныНоменклатуры.Видимость = Не Параметры.СкрыватьКомандуЦеныНоменклатуры;
		Элементы.СписокСтандартныйПоискХарактеристикиКонтекстноеМенюЦеныНоменклатуры.Видимость = Не Параметры.СкрыватьКомандуЦеныНоменклатуры;
		Элементы.КорзинаВидЦены.Видимость = Не (Параметры.РежимПодбораБезСуммовыхПараметров Или Параметры.СкрыватьКолонкуВидЦены);
		
		Элементы.КорзинаКонтекстноеМенюЗаполнитьЦеныПоСоглашению.Видимость            = Не (Параметры.РежимПодбораБезСуммовыхПараметров Или Параметры.СкрыватьКолонкуВидЦены);
		Элементы.КорзинаКонтекстноеМенюЗаполнитьЦеныВыделенныхСтрокПоВидуЦен.Видимость = Не (Параметры.РежимПодбораБезСуммовыхПараметров Или Параметры.СкрыватьКолонкуВидЦены);
		
		Элементы.КорзинаИндексСовместноПродаваемыеТовары.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНоменклатуруПродаваемуюСовместно");
		
		Форма.ВидНоменклатурыДоИзменения = Форма.ВидНоменклатуры;
		
		Элементы.СтраницаСоздатьНоменклатуру.Видимость = ПравоДоступа("Добавление", Метаданные.Справочники.Номенклатура);
		Элементы.СтраницаСоздатьХарактеристику.Видимость = ПравоДоступа("Добавление", Метаданные.Справочники.ХарактеристикиНоменклатуры);
		
		Форма.ЗапретРедактированияСоставаНабора = Параметры.ЗапретРедактированияСоставаНабора;
		Форма.ЗапретРедактированияЦеныНабора    = Параметры.ЗапретРедактированияЦеныНабора;
		
		Форма.БезОтбораПоВключениюНДСВЦену = Параметры.БезОтбораПоВключениюНДСВЦену;
		Форма.ЗапретРедактированияСоставаНабора = Параметры.ЗапретРедактированияСоставаНабора;
		Форма.ЗапретРедактированияЦеныНабора    = Параметры.ЗапретРедактированияЦеныНабора;
		
		Форма.РежимПодбораДляДокументовЦенообразования = Параметры.РежимПодбораДляДокументовЦенообразования;
		
		#КонецОбласти
		
	КонецЕсли;
	
#КонецОбласти
	УстановитьЗначенияПоНастройкамФормы(Форма);
	
#Область УстановитьЗначенияПоНастройкамФормыПодбора
	
	Форма.ТолькоВНаличии = Ложь;
	
	Настройки = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(Форма.КодФормы,  "");
	
	Если Не (Настройки = Неопределено) Тогда
		
		Если Настройки.Свойство("ТолькоВНаличии") Тогда
			Форма.ТолькоВНаличии = Настройки.ТолькоВНаличии И Форма.ОтображатьОстаткиНаСкладах;
		КонецЕсли;
		
		Если Форма.СкрыватьКомандуОстаткиНаСкладах Тогда
			Форма.ТолькоВНаличии = Ложь;
		КонецЕсли; 
		
		Если Настройки.Свойство("ОтображатьОстатки") Тогда
			Форма.ОтображатьОстатки = Настройки.ОтображатьОстатки;
			Форма.ОтображатьОстаткиНадпись = ?(Форма.ОтображатьОстатки,
				НСтр("ru = 'Подробная информация об остатках (скрыть)'"),
				НСтр("ru = 'Подробная информация об остатках (показать)'"));
			
			Элементы.ОстаткиТоваров.Видимость = Форма.ОтображатьОстатки
				И Не (Форма.РежимПодбораБезКоличественныхПараметров
					Или Форма.СкрыватьКомандуОстаткиНаСкладах)
				И Форма.ОтображатьОстаткиНаСкладах
				И (Не Форма.ИспользоватьРасширеннуюФормуПодбораКоличестваИВариантовОбеспечения
					Или АвторизованВнешнийПользователь)
				И (ЭтоФормаПодбораВДокументыЗакупки Или Не ЗначениеЗаполнено(Параметры.НаправлениеДеятельности));
			
			Если ЭтоФормаПодбораВДокументыЗакупки Тогда
				Элементы.ОстаткиТоваровПоставщика.Видимость = Форма.ОтображатьОстатки
					И Не Форма.СкрыватьКомандуОстаткиНаСкладах;
			КонецЕсли;
		КонецЕсли;
		
		Если Настройки.Свойство("ПоказыватьПодобранныеТовары") Тогда
			
			Форма.ПоказыватьПодобранныеТовары = Настройки.ПоказыватьПодобранныеТовары;
			
		КонецЕсли;
		
		Если ЭтоФормаПодбораВДокументыПродажи Тогда
			Если Настройки.Свойство("ЗапрашиватьКоличество") Тогда
				Форма.ЗапрашиватьКоличество = Настройки.ЗапрашиватьКоличество;
			Иначе
				Форма.ЗапрашиватьКоличество = ПолучитьФункциональнуюОпцию("ИспользоватьСерииНоменклатуры");
			КонецЕсли;
			
			Если Настройки.Свойство("ЗапрашиватьЦену") Тогда
				Форма.ЗапрашиватьЦену = Настройки.ЗапрашиватьЦену;
			Иначе
				Форма.ЗапрашиватьЦену = Истина;
			КонецЕсли;
		Иначе
			Если Настройки.Свойство("ЗапрашиватьКоличество") Тогда
				Форма.ЗапрашиватьКоличество = Настройки.ЗапрашиватьКоличество;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЭтоФормаПодбораВДокументыЗакупки Тогда
		Элементы.ЗапрашиватьКоличествоЦену.Пометка = Форма.ЗапрашиватьКоличество;
	Иначе
		Элементы.НеЗапрашиватьКоличество.Пометка = Не Форма.ЗапрашиватьКоличество;
		Элементы.ЗапрашиватьКоличество.Пометка = Форма.ЗапрашиватьКоличество И (Не Форма.ЗапрашиватьЦену Или Форма.РежимПодбораБезСуммовыхПараметров);
		Элементы.ЗапрашиватьКоличествоЦену.Пометка = Форма.ЗапрашиватьКоличество И Форма.ЗапрашиватьЦену;
	КонецЕсли;

#КонецОбласти	

	УстановитьОтборТолькоВНаличии(Форма);

	#Область УстановитьЗаголовкиЭлементовФормыПоПараметрам
	ИмяСпискаНоменклатуры = ПодборТоваровКлиентСервер.ИмяСпискаНоменклатурыПоВариантуПоиска(Форма);
	ИмяСпискаХарактеристик = ПодборТоваровКлиентСервер.ИмяСпискаХарактеристикПоВариантуПоиска(Форма);
		
	ТекстЗаголовка = НСтр("ru = 'Цена'");
	
	Если ЗначениеЗаполнено(Форма.Валюта) Тогда
		ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Цена (%1)'"), Форма.Валюта);
	КонецЕсли;
	
	ПолеФормыНоменклатураЦена = Форма.Элементы[ИмяСпискаНоменклатуры].ПодчиненныеЭлементы[ИмяСпискаНоменклатуры+"Цена"]; // ПолеФормы
	ПолеФормыХарактеристикаЦена = Форма.Элементы[ИмяСпискаХарактеристик].ПодчиненныеЭлементы[ИмяСпискаХарактеристик+"Цена"]; // ПолеФормы
	
	ПолеФормыНоменклатураЦена.Заголовок = ТекстЗаголовка;
	ПолеФормыХарактеристикаЦена.Заголовок = ТекстЗаголовка;
	
	Элементы.КорзинаЦена.Заголовок = ТекстЗаголовка;
	ВыбранаГруппаСкладов = Справочники.Склады.ЭтоГруппа(Параметры.Склад);
	
	ТекстЗаголовка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		?(ВыбранаГруппаСкладов,
		НСтр("ru = 'Только в наличии на группе складов ""%1""'"),
		?(ЗначениеЗаполнено(Параметры.Склад), НСтр("ru = 'Только в наличии на складе ""%1""'"), НСтр("ru = 'Только в наличии'"))), 
		Параметры.Склад);
	
	Если Параметры.Свойство("Документ") Тогда
		Если ТипЗнч(Параметры.Документ) <> Тип("ДокументСсылка.УстановкаЦенНоменклатуры") Тогда
			Элементы.ТолькоВНаличии.Заголовок = ТекстЗаголовка;
		КонецЕсли;
	Иначе
		Элементы.ТолькоВНаличии.Заголовок = ТекстЗаголовка;
	КонецЕсли;
#КонецОбласти

	УстановитьЭлементыСпискаЗначенийКачества(Форма);
	УстановитьОтборПоТипуНоменклатурыПоПараметрам(Форма);
	
#Область УстановитьОтборПоВариантуРасчетаЦенНаборов
	
	Если ЭтоФормаПодбораВДокументыПродажи Тогда
		
		Если Параметры.ОтборПоВариантуРасчетаЦенНаборов <> Неопределено Тогда
			ОтборПоВариантуРасчетаЦенНаборов = Параметры.ОтборПоВариантуРасчетаЦенНаборов;
			Отбор = Новый СписокЗначений;
			Отбор.ЗагрузитьЗначения(ОтборПоВариантуРасчетаЦенНаборов);
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.СписокНоменклатура, "ВариантРасчетаЦеныНабора", Отбор, 
				ВидСравненияКомпоновкиДанных.ВСписке, "ОтборПоВариантуРасчетаЦенНаборов", (Отбор.Количество() > 0));
				
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.СписокХарактеристики, "ВариантРасчетаЦеныНабора", Отбор, 
				ВидСравненияКомпоновкиДанных.ВСписке, "ОтборПоВариантуРасчетаЦенНаборов", (Отбор.Количество() > 0));
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти

#Область УстановитьОтборОсобенностьУчета
	Если Параметры.Свойство("ОсобенностьУчета") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.СписокНоменклатура, "Ссылка.ОсобенностьУчета", Параметры.ОсобенностьУчета, 
			ВидСравненияКомпоновкиДанных.ВСписке, "ОтборОсобенностьУчета",ЗначениеЗаполнено(Параметры.ОсобенностьУчета));
	КонецЕсли;

#КонецОбласти

#Область УстановитьОтборОсобенностьУчета

	Если Параметры.Свойство("КоллекцияНоменклатуры") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Форма.СписокНоменклатура, "Ссылка.КоллекцияНоменклатуры", Параметры.КоллекцияНоменклатуры, 
			ВидСравненияКомпоновкиДанных.Равно, "ОтборКоллекцияНоменклатуры",ЗначениеЗаполнено(Параметры.КоллекцияНоменклатуры));
	КонецЕсли;

#КонецОбласти

	Форма.ТекущаяСтрокаНоменклатуры = ПодборТоваровКлиентСервер.СтруктураСтрокиНоменклатуры();
	Форма.ТекущаяСтрокаХарактеристик = ПодборТоваровКлиентСервер.СтруктураСтрокиХарактеристик();
	
	ОбщегоНазначенияУТ.ИнициализироватьРеквизитыФормыДляПолнотекстовогоПоиска(Форма, "ИспользоватьПолнотекстовыйПоискПриПодбореТоваров");
	
	УстановитьТекстыЗапросовСписковФормыПодбора(Форма);

	#Область УстановитьПараметрыСписковФормыПодбора
	
	СписокНоменклатура = Форма.СписокНоменклатура;
	СписокХарактеристики = Форма.СписокХарактеристики;
	
	Если ЭтоФормаПодбораВДокументыЗакупки Тогда
		СписокНоменклатураПартнера = Форма.СписокНоменклатураПартнера;
	КонецЕсли;
	
	Если ЭтоФормаПодбораВДокументыПродажи Тогда
					
		Если Форма.РежимОтбораПоАссортименту Тогда
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ОбъектПланирования", Форма.ОбъектПланированияАссортимента);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ОбъектПланирования", Форма.ОбъектПланированияАссортимента);
		КонецЕсли;
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "СегментНоменклатуры", Форма.СегментНоменклатуры, ЗначениеЗаполнено(Форма.СегментНоменклатуры));
		Если Форма.ИспользоватьСоглашенияСКлиентами
			И Не Форма.РежимПодбораБезСоглашенийСКлиентами Тогда
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Соглашение", Форма.Соглашение);
		КонецЕсли;
			
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Валюта", Форма.Валюта);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Дата", Форма.Дата);
		
		Если Форма.ВидыЦен.Количество() = 0 Тогда
			ВидыЦенПараметр = Справочники.ВидыЦен.ПустаяСсылка();
		ИначеЕсли Форма.ВидыЦен.Количество() = 1 Тогда
			ВидыЦенПараметр = Форма.ВидыЦен[0].Значение;
		Иначе
			ВидыЦенПараметр = Форма.ВидыЦен.ВыгрузитьЗначения();
		КонецЕсли;
			
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ВидыЦен", ВидыЦенПараметр);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Назначение", Форма.ОтборПоНазначениюТекущий);
		
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "УпаковкиЕдиницыИзмеренияПустаяСсылка", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
		
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ВидЦенОсновной", Форма.ВидЦенОсновной);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ВидЦенИндивидуальный", Форма.ВидЦенИндивидуальный);
		
		Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "СегментНоменклатуры", Справочники.СегментыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "НоменклатураСегмента", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВладелецХарактеристик", Справочники.Номенклатура.ПустаяСсылка());
			Если Форма.ИспользоватьСоглашенияСКлиентами
				И Не Форма.РежимПодбораБезСоглашенийСКлиентами Тогда
				ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Соглашение", Форма.Соглашение);
			КонецЕсли;
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Валюта", Форма.Валюта);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Дата", Форма.Дата);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидыЦен", ВидыЦенПараметр);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидЦенОсновной", Форма.ВидЦенОсновной);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидЦенИндивидуальный", Форма.ВидЦенИндивидуальный);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидНоменклатуры", Справочники.ВидыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ЦеноваяГруппа", Справочники.ЦеновыеГруппы.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Назначение", Форма.ОтборПоНазначениюТекущий);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "УпаковкиЕдиницыИзмеренияПустаяСсылка", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
			
		КонецЕсли;
		
		Если Не ПраваПользователяПовтИсп.ЭтоПартнер() Тогда
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Склад", СкладПараметр);
			
			Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
				ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Склад", СкладПараметр);
			КонецЕсли;
			
		КонецЕсли;
				
	ИначеЕсли ЭтоФормаПодбораВДокументыЗакупки Тогда
				
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Дата", Форма.Дата);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Склад", СкладПараметр);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Валюта", Форма.Валюта);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "Соглашение", Форма.Соглашение);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "ВидЦеныПоставщика", Форма.ВидЦеныПоставщика);
		ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатура, "СегментНоменклатуры", Форма.СегментНоменклатуры, ЗначениеЗаполнено(Форма.СегментНоменклатуры));
		
		Если Форма.ИспользоватьХарактеристикиНоменклатуры Тогда
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидЦеныПоставщика", Форма.ВидЦеныПоставщика);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "СегментНоменклатуры", Форма.СегментНоменклатуры);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "НоменклатураСегмента", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Соглашение", Форма.Соглашение);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Валюта", Форма.Валюта);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Дата", Форма.Дата);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Номенклатура", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ЕдиницаИзмерения", Справочники.УпаковкиЕдиницыИзмерения.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВладелецХарактеристик", Справочники.Номенклатура.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ТипНоменклатуры", Перечисления.ТипыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "ВидНоменклатуры", Справочники.ВидыНоменклатуры.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "СтавкаНДС", Справочники.СтавкиНДС.ПустаяСсылка());
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокХарактеристики, "Склад", СкладПараметр);
			
		КонецЕсли;
		
		Если Форма.ИспользоватьНоменклатуруПартнеров Тогда
			
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатураПартнера, "ВидЦеныПоставщика", Форма.ВидЦеныПоставщика);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатураПартнера, "Соглашение", Форма.Параметры.Соглашение);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатураПартнера, "Валюта", Форма.Параметры.Валюта);
			ПодборТоваровКлиентСервер.УстановитьПараметрДинамическогоСписка(СписокНоменклатураПартнера, "Дата", Форма.Параметры.Дата);
			
		КонецЕсли;
		
	КонецЕсли;
#КонецОбласти

	ПодборТоваровКлиентСервер.УстановитьТекущиеСтраницыПоВариантуПоиска(Форма);
	// СтандартныеПодсистемы.БазоваяФункциональность
	МультиязычностьСервер.ИзменениеТекстаЗапросаСпискаДляТекущегоЯзыка(Форма, "СписокНоменклатура");
	МультиязычностьСервер.ИзменениеТекстаЗапросаСпискаДляТекущегоЯзыка(Форма, "СписокХарактеристики");
	// Конец СтандартныеПодсистемы.БазоваяФункциональность
КонецПроцедуры
